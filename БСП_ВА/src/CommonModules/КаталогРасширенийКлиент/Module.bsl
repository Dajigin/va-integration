
#Область СлужебныйПрограммныйИнтерфейс

Процедура ПриНачалеРаботыСистемы(Параметры) Экспорт
	
	Если Параметры.Отказ 
		ИЛИ НЕ КаталогРасширенийВызовСервера.КаталогРасширенийИспользуется()
		ИЛИ НЕ КаталогРасширенийВызовСервера.ЭтоРазделенныйСеанс() Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("Обработка.КаталогРасширений.Форма.ФормаУстановленныеРасширения",,,,,,, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
	ИмяПараметраПриложения = ИмяПараметраПриложенияДляОбменаДанными();
	АдресОбменаДанными = ПоместитьВоВременноеХранилище(Неопределено, Новый УникальныйИдентификатор);
	ПараметрыПриложения[ИмяПараметраПриложения] = АдресОбменаДанными;
	КаталогРасширенийВызовСервера.ЗапуститьПолучениеПраваАдминистрирования(АдресОбменаДанными);
	           
	ПодключитьОбработчикОжидания("ПолучитьПравоАдминистрированияВМоделиСервиса", 5);
	ПодключитьОбработчикОжидания("ЗапуститьПроверкуНовыхОповещений", 30);
		
КонецПроцедуры

Процедура ОткрытьФормуВерсииРасширения(Знач ИдентификаторВерсии, Знач Наименование, Знач ВладелецФормы = Неопределено) Экспорт 
	
	ПараметрыНовойФормы = Новый Структура;
	ПараметрыНовойФормы.Вставить("ИдентификаторВерсии", ИдентификаторВерсии);
	ПараметрыНовойФормы.Вставить("НаименованиеРасширения", Наименование);
	
	ОткрытьФорму("Обработка.КаталогРасширений.Форма.ФормаОбъектаРасширение", 
		ПараметрыНовойФормы, 
		ВладелецФормы,,,,, 
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

Процедура ПроверитьНаличиеНовыхОповещений(ЕстьПравоАдминистрирования = Ложь) Экспорт 
	
	ДанныеДляОповещения = КаталогРасширенийВызовСервера.ПолучитьНовыеУведомления(ЕстьПравоАдминистрирования); 
	
	Для Каждого Оповещение Из ДанныеДляОповещения Цикл
		
		Если Оповещение.ТипУведомления = ПредопределенноеЗначение("Перечисление.ТипыУведомленийРасширений.ИзменениеСостояния") Тогда
			ОбработатьУведомлениеИзмененияСостояния(Оповещение);
		ИначеЕсли Оповещение.ТипУведомления = ПредопределенноеЗначение("Перечисление.ТипыУведомленийРасширений.ОтключениеРасширения") Тогда
			ОбработатьУведомлениеОтключенияРасширения(Оповещение);	
		ИначеЕсли Оповещение.ТипУведомления = ПредопределенноеЗначение("Перечисление.ТипыУведомленийРасширений.ОбновлениеРасширения") Тогда
			ОбработатьУведомлениеОбновлениеРасширения(Оповещение);
		КонецЕсли;
		 		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработатьУведомлениеИзмененияСостояния(Оповещение) Экспорт
	
	Если Оповещение.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияРасширений.Установлено") Тогда
		Текст = НСтр("ru = 'Установка расширения завершена'");
		СостояниеДоп = НСтр("ru = 'установлено'");
	Иначе 
		Текст = НСтр("ru = 'Удаление расширения завершено'");	
		СостояниеДоп = НСтр("ru = 'удалено'");
	КонецЕсли;
	
	Пояснение = СтрШаблон(НСтр("ru = 'Расширение ""%1"" %2, необходимо перезапустить приложение'"), Оповещение.Расширение, СостояниеДоп);
	Описание = Новый ОписаниеОповещения("ОбработатьПерезапуск", ЭтотОбъект, Оповещение);
	
	ПоказатьОповещениеПользователя(Текст, Описание, Пояснение, БиблиотекаКартинок.Успешно32,
		СтатусОповещенияПользователя.Важное, Оповещение.ИдентификаторРасширения);
	
КонецПроцедуры
	
Процедура ОбработатьУведомлениеОтключенияРасширения(Оповещение) Экспорт
	
	Текст = НСтр("ru = 'Расширение отключено'");
	Пояснение = СтрШаблон(НСтр("ru = 'Расширение: %1 отключено по причине: %2'"), Оповещение.Наименование, Оповещение.Причина);
	Описание = Новый ОписаниеОповещения("ОбработатьОткрытиеРасширения", ЭтотОбъект, Оповещение);
	
	ПоказатьОповещениеПользователя(Текст, Описание, Пояснение, БиблиотекаКартинок.Предупреждение32, 
		СтатусОповещенияПользователя.Важное, Оповещение.ИдентификаторРасширения);
	
КонецПроцедуры
		
Процедура ОбработатьУведомлениеОбновлениеРасширения(Оповещение) Экспорт
	
	Текст = НСтр("ru = 'Обновление расширения'");	
	Пояснение = СтрШаблон(НСтр("ru = 'Требуется выполнить ручное обновление расширения: %1'"), Оповещение.Наименование);
	Описание = Новый ОписаниеОповещения("ОбработатьОбновлениеРасширения", ЭтотОбъект, Оповещение);
	
	ПоказатьОповещениеПользователя(Текст, Описание, Пояснение, БиблиотекаКартинок.Информация32, 
		СтатусОповещенияПользователя.Важное, Оповещение.ИдентификаторРасширения);
	
КонецПроцедуры

Функция АдресОбменаДанными() Экспорт 
	
	Возврат ПараметрыПриложения[ИмяПараметраПриложенияДляОбменаДанными()];
	
КонецФункции

#КонецОбласти

#Область СлужебныйПроцедурыИФункции

Функция ИмяПараметраПриложенияДляОбменаДанными()
	
	Возврат "ТехнологияСервиса.РасширенияВМоделиСервиса.АдресПолучениеПраваАдминистрирования";
	
КонецФункции

Процедура ОбработатьПерезапуск(Знач ДанныеОповещения) Экспорт 
	
	Если ДанныеОповещения.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияРасширений.Установлено") Тогда
		СостояниеДоп = НСтр("ru = 'установлено'");
	Иначе 
		СостояниеДоп = НСтр("ru = 'удалено'");
	КонецЕсли;
	
	Вопрос = СтрШаблон(НСтр("ru = 'Расширение ""%1"" %2, перезапустить приложение?'"), ДанныеОповещения.Расширение, СостояниеДоп);
	Описание = Новый ОписаниеОповещения("ОбработатьПерезапускОтвет", ЭтотОбъект);
	
	ПоказатьВопрос(Описание, Вопрос, РежимДиалогаВопрос.ДаНет,,, НСтр("ru = 'Перезапуск приложения'"));
	
КонецПроцедуры

Процедура ОбработатьПерезапускОтвет(Ответ, ДопПараметры) Экспорт 
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ЗавершитьРаботуСистемы(Ложь, Истина);
	
КонецПроцедуры

Процедура ОбработатьОткрытиеРасширения(Знач ДанныеОповещения) Экспорт 
	
	ОткрытьФормуВерсииРасширения(ДанныеОповещения.ИдентификаторВерсии, ДанныеОповещения.Наименование);
	
КонецПроцедуры

Процедура ОбработатьОбновлениеРасширения(Знач ДанныеОповещения) Экспорт 
	
	ОткрытьФорму("Обработка.КаталогРасширений.Форма.ФормаОбновляемыеРасширения");
	
КонецПроцедуры

#КонецОбласти
