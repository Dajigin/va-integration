

#Область СлужебныйПрограммныйИнтерфейс

Функция КаталогРасширенийИспользуется() Экспорт
	        
	Возврат ПолучитьФункциональнуюОпцию("ИспользованиеКаталогаРасширенийВМоделиСервиса");
	
КонецФункции

Функция ЭтоРазделенныйСеанс() Экспорт 
	
	Возврат РаботаВМоделиСервиса.ИспользованиеРазделителяСеанса();
	
КонецФункции

Процедура ЗапуститьПолучениеПраваАдминистрирования(Знач АдресОбменаДанными) Экспорт
	
	ИмяМетода = "ПрограммныйИнтерфейсСервиса.ЕстьПравоАдминистрированияПриложения";
	
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(РаботаВМоделиСервиса.ЗначениеРазделителяСеанса());
	МассивПараметров.Добавить(АдресОбменаДанными);
	
	ФоновыеЗадания.Выполнить(ИмяМетода, МассивПараметров, Новый УникальныйИдентификатор, НСтр("ru = 'Получение права администрирования приложения'"));
	
КонецПроцедуры

Функция ПолучитьНовыеУведомления(Знач ЕстьПравоАдминистрирования) Экспорт 
	
	МассивДанных = Новый Массив;
	
	Если ЕстьПравоАдминистрирования Тогда
		ПроверитьНаличиеОтключенныхРасширений(МассивДанных);
		ПроверитьНаличиеОбновляемыхРасширений(МассивДанных);
	КонецЕсли;
		
	ПроверитьНаличиеИзмененийСостоянийРасширений(МассивДанных);
	
	Возврат МассивДанных;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьНаличиеИзмененийСостоянийРасширений(МассивДанных)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОчередьРасширенийДляОповещений.ИдентификаторРасширения КАК ИдентификаторРасширения,
	               |	ОчередьРасширенийДляОповещений.Пользователь КАК Пользователь,
	               |	ОчередьРасширенийДляОповещений.Состояние КАК Состояние
	               |ИЗ
	               |	РегистрСведений.ОчередьРасширенийДляОповещений КАК ОчередьРасширенийДляОповещений
	               |ГДЕ
	               |	ОчередьРасширенийДляОповещений.Пользователь = &Пользователь
	               |	И ОчередьРасширенийДляОповещений.Состояние В (ЗНАЧЕНИЕ(Перечисление.СостоянияРасширений.Установлено), ЗНАЧЕНИЕ(Перечисление.СостоянияРасширений.Удалено))";
	
	Запрос.УстановитьПараметр("Пользователь", Пользователи.ТекущийПользователь());
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
		
	Пока Выборка.Следующий() Цикл
		
		Расширение = Справочники.ПоставляемыеРасширения.ПолучитьСсылку(Выборка.ИдентификаторРасширения);
		
		ДанныеОповещения = Новый Структура;
		ДанныеОповещения.Вставить("ТипУведомления", Перечисления.ТипыУведомленийРасширений.ИзменениеСостояния);
		ДанныеОповещения.Вставить("ИдентификаторРасширения", Выборка.ИдентификаторРасширения);
		ДанныеОповещения.Вставить("Расширение", Расширение);
		ДанныеОповещения.Вставить("Состояние", Выборка.Состояние);
		
		МассивДанных.Добавить(ДанныеОповещения);

	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьНаличиеОтключенныхРасширений(МассивДанных)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Расширения = РасширенияВМоделиСервиса.РасширенияТекущийОбластиДанных();
	
	Если ТипЗнч(Расширения) <> Тип("ТаблицаЗначений") Тогда
		Возврат;
	КонецЕсли;
	
	ОтключенныеРасширения = Расширения.НайтиСтроки(Новый Структура("Отключено", Истина));
	
	Для Каждого Расширение Из ОтключенныеРасширения Цикл
		
		ДанныеОповещения = Новый Структура;
		ДанныеОповещения.Вставить("ТипУведомления", Перечисления.ТипыУведомленийРасширений.ОтключениеРасширения);
		ДанныеОповещения.Вставить("ИдентификаторРасширения", Расширение.ИспользуемоеРасширение);
		ДанныеОповещения.Вставить("Расширение", Расширение.ПоставляемоеРасширение);
		ДанныеОповещения.Вставить("Наименование", Расширение.Наименование);
		ДанныеОповещения.Вставить("Причина", Расширение.ПричинаОтключения);
		ДанныеОповещения.Вставить("ИдентификаторВерсии", Расширение.ИдентификаторВерсии);
		
		МассивДанных.Добавить(ДанныеОповещения);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьНаличиеОбновляемыхРасширений(МассивДанных)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = КаталогРасширений.ТекстЗапросаОбновляемыхРасширений();
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат;	
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ДанныеОповещения = Новый Структура;
		ДанныеОповещения.Вставить("ТипУведомления", Перечисления.ТипыУведомленийРасширений.ОбновлениеРасширения);
		ДанныеОповещения.Вставить("ИдентификаторРасширения", Выборка.ПоставляемоеРасширение.УникальныйИдентификатор());
		ДанныеОповещения.Вставить("Расширение", Выборка.ПоставляемоеРасширение);
		ДанныеОповещения.Вставить("Наименование", Выборка.Наименование);
		ДанныеОповещения.Вставить("ИдентификаторВерсии", Выборка.ИдентификаторВерсии);
		
		МассивДанных.Добавить(ДанныеОповещения);	
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти