#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает значение перечисления по имени значения свойства программного интерфейса сервиса.
//
// Параметры:
//  ИмяЗначения - Строка - имя значения свойства.
// 
// Возвращаемое значение:
//   ПеречислениеСсылка.ПериодичностьПериодовДействия - значение перечисления.
//
Функция ЗначениеПоИмени(ИмяЗначения) Экспорт
    
    Если ИмяЗначения = "day" Тогда
        Возврат ПредопределенноеЗначение("Перечисление.ПериодичностьПериодовДействия.День");
    ИначеЕсли ИмяЗначения = "week" Тогда
        Возврат ПредопределенноеЗначение("Перечисление.ПериодичностьПериодовДействия.Неделя");
    ИначеЕсли ИмяЗначения = "decade" Тогда
        Возврат ПредопределенноеЗначение("Перечисление.ПериодичностьПериодовДействия.Декада");
    ИначеЕсли ИмяЗначения = "month" Тогда
        Возврат ПредопределенноеЗначение("Перечисление.ПериодичностьПериодовДействия.Месяц");
    ИначеЕсли ИмяЗначения = "half_year" Тогда
        Возврат ПредопределенноеЗначение("Перечисление.ПериодичностьПериодовДействия.Квартал");
    ИначеЕсли ИмяЗначения = "semester" Тогда
        Возврат ПредопределенноеЗначение("Перечисление.ПериодичностьПериодовДействия.Полугодие");
    ИначеЕсли ИмяЗначения = "year" Тогда
        Возврат ПредопределенноеЗначение("Перечисление.ПериодичностьПериодовДействия.Год");
    Иначе
        Возврат ПредопределенноеЗначение("Перечисление.ПериодичностьПериодовДействия.ПустаяСсылка");
    КонецЕсли; 
    
КонецФункции

// Добавляет к дате указанное число периодов действия.
//
// Параметры:
//  ИсходнаяДата - Дата - исходная дата
//  Периодичность - ПеречислениеСсылка.ПериодичностьПериодовДействия - периодичность периода
//  Количество - Число - количество добавляемых периодов
// 
// Возвращаемое значение:
//  Дата - результирующая дата 
//
Функция ДобавитьКДате(Знач ИсходнаяДата, Знач Периодичность, Знач Количество) Экспорт 
	
	Дата = ИсходнаяДата;
	
	ПериодНачалоДня = НачалоДня(ИсходнаяДата);
	
	КоличествоСекундВСутках = 86400;
	КоличествоДнейВНеделе = 7;
	КоличествоДнейВДекаде = 10;
	КоличествоМесяцевВКвартале = 3;
	КоличествоМесяцевВПолугодие = 6;
	КоличествоМесяцевВГоду = 12;
	
	ДанныеПериода = Новый Структура("Периодичность, Количество", Периодичность, Количество);
	
	Если ДанныеПериода.Периодичность = Перечисления.ПериодичностьПериодовДействия.День
			ИЛИ ДанныеПериода.Периодичность = Перечисления.ПериодичностьПериодовДействия.Декада
			ИЛИ ДанныеПериода.Периодичность = Перечисления.ПериодичностьПериодовДействия.Неделя Тогда
			
		КоличествоСутокВСекундах = ДанныеПериода.Количество * КоличествоСекундВСутках;
		
		Если ДанныеПериода.Периодичность = Перечисления.ПериодичностьПериодовДействия.Декада Тогда
			КоличествоСутокВСекундах = КоличествоСутокВСекундах * КоличествоДнейВДекаде;
		ИначеЕсли ДанныеПериода.Периодичность = Перечисления.ПериодичностьПериодовДействия.Неделя Тогда
			КоличествоСутокВСекундах = КоличествоСутокВСекундах * КоличествоДнейВНеделе;
		КонецЕсли;
		
		Дата = ПериодНачалоДня + КоличествоСутокВСекундах;
		
	Иначе
		КоличествоМесяцев = ДанныеПериода.Количество;
		
		Если ДанныеПериода.Периодичность = Перечисления.ПериодичностьПериодовДействия.Квартал Тогда
			КоличествоМесяцев = КоличествоМесяцев * КоличествоМесяцевВКвартале;
		ИначеЕсли ДанныеПериода.Периодичность = Перечисления.ПериодичностьПериодовДействия.Полугодие Тогда
			КоличествоМесяцев = КоличествоМесяцев * КоличествоМесяцевВПолугодие;
		ИначеЕсли ДанныеПериода.Периодичность = Перечисления.ПериодичностьПериодовДействия.Год Тогда
			КоличествоМесяцев = КоличествоМесяцев * КоличествоМесяцевВГоду;
		КонецЕсли;
		
		Дата = ДобавитьМесяц(ПериодНачалоДня, КоличествоМесяцев);
		
	КонецЕсли;
	
	Возврат Дата - 1;
	
КонецФункции

#КонецОбласти

#КонецЕсли