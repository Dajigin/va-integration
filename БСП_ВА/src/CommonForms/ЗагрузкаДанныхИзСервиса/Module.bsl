///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2019, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОткрытьФормуАктивныхПользователей(Элемент)
	
	ОткрытьФорму("Обработка.АктивныеПользователи.Форма.АктивныеПользователи");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Загрузить(Команда)
	
	Если ЭтоПовторноеНажатие Тогда
		ЗавершитьЗагрузкуДанных();
	Иначе
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПродолжитьЗагрузкуДанных", ЭтотОбъект);
		НачатьПомещениеФайла(ОписаниеОповещения,,,, УникальныйИдентификатор);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПродолжитьЗагрузкуДанных(ВыборВыполнен, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	
	АдресХранилища = Адрес;
	
	Если НЕ ВыборВыполнен Тогда
		Возврат;
	КонецЕсли;
		
	Если НЕ ЭтоПовторноеНажатие И ФайлДанныхСодержитРасширения(АдресХранилища) Тогда
		ЭтоПовторноеНажатие = Истина;
		Возврат;					
	КонецЕсли;
	
	ЗавершитьЗагрузкуДанных();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗавершитьЗагрузкуДанных()
	
	Состояние(
		НСтр("ru = 'Выполняется загрузка данных из сервиса.
		|Операция может занять продолжительное время, пожалуйста, подождите...'"),);
	
	ВыполнитьЗагрузку(АдресХранилища, ЗагружатьИнформациюОПользователях);
	ПрекратитьРаботуСистемы(Истина);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ФайлДанныхСодержитРасширения(АдресХранилища)
	
	ФайлРасширений = "Extensions.xml";
	
	ДанныеАрхива = ПолучитьИзВременногоХранилища(АдресХранилища);
	Поток = ДанныеАрхива.ОткрытьПотокДляЧтения();
	
	ЧтениеZIP = Новый ЧтениеZipФайла(Поток);
	ЭлементZip = ЧтениеZIP.Элементы.Найти(ФайлРасширений);
	
	Если ЭлементZip = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ИмяКаталогаАрхива = ПолучитьИмяВременногоФайла("zip") + ПолучитьРазделительПути();
	СоздатьКаталог(ИмяКаталогаАрхива);
	
	ЧтениеZIP.Извлечь(ЭлементZip, ИмяКаталогаАрхива, РежимВосстановленияПутейФайловZIP.НеВосстанавливать);
	ЧтениеZIP.Закрыть();
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл(ИмяКаталогаАрхива + ФайлРасширений);
	ЧтениеXML.ПерейтиКСодержимому();
	
	Если ЧтениеXML.ТипУзла <> ТипУзлаXML.НачалоЭлемента Или ЧтениеXML.Имя <> "Data" Тогда
		Возврат Ложь;
	КонецЕсли;
	
	МассивВерсий = Новый Массив;
	
	Пока ЧтениеXML.Прочитать() Цикл
		
		Если ЧтениеXML.ТипУзла <> ТипУзлаXML.НачалоЭлемента И ЧтениеXML.Имя <> "Extensions" Тогда		
			ЧтениеXML.Прочитать();
			Продолжить;	
		КонецЕсли;
		
		ИзменяетСтруктуруДанных = XMLЗначение(Тип("Булево"), ЧтениеXML.ЗначениеАтрибута("ModifiesDataStructure"));
		Наименование = XMLЗначение(Тип("Строка"), ЧтениеXML.ЗначениеАтрибута("Name"));
		
		Если НЕ ИзменяетСтруктуруДанных Тогда
			Продолжить;
		КонецЕсли;
		
		МассивВерсий.Добавить(Наименование);
		
	КонецЦикла;
	
	Если МассивВерсий.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	СтрокаСообщения = НСтр("ru = 'Выбранный файл содержит данные добавленные расширениями.'") 
		+ Символы.ПС + НСтр("ru = 'Для восстановления из данного архива установите следующие расширения:'");
	ОбщегоНазначения.СообщитьПользователю(СтрокаСообщения);
	
	Для Каждого Расширение Из МассивВерсий Цикл
		ОбщегоНазначения.СообщитьПользователю(Расширение);			
	КонецЦикла;
	
	ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Если все необходимые расширения уже установлены, тогда нажмите ''Продолжить'''"));
	
	Возврат Истина;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ВыполнитьЗагрузку(Знач АдресФайла, Знач ЗагружатьИнформацияОПользователях)
	
	УстановитьМонопольныйРежим(Истина);
	
	Попытка
		
		ДанныеАрхива = ПолучитьИзВременногоХранилища(АдресФайла); // ДвоичныеДанные
		ИмяАрхива = ПолучитьИмяВременногоФайла("zip");
		ДанныеАрхива.Записать(ИмяАрхива);
		
		ВыгрузкаЗагрузкаОбластейДанных.ЗагрузитьТекущуюОбластьДанныхИзАрхива(ИмяАрхива, ЗагружатьИнформацияОПользователях, Истина);
		
		ВыгрузкаЗагрузкаДанныхСлужебный.УдалитьВременныйФайл(ИмяАрхива);
		
		УстановитьМонопольныйРежим(Ложь);
		
	Исключение
		
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		
		УстановитьМонопольныйРежим(Ложь);
		
		ШаблонЗаписиЖР = НСтр("ru = 'При загрузке данных произошла ошибка:
                               |
                               |-----------------------------------------
                               |%1
                               |-----------------------------------------'");
		ТекстЗаписиЖР = СтрШаблон(ШаблонЗаписиЖР, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке));

		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Загрузка данных'", ОбщегоНазначения.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,
			,
			,
			ТекстЗаписиЖР);

		ШаблонИсключения = НСтр("ru = 'При загрузке данных произошла ошибка: %1.
                                 |
                                 |Расширенная информация для службы поддержки записана в журнал регистрации. Если причина ошибки неизвестна - рекомендуется обратиться в службу технической поддержки, предоставив для расследования выгрузку журнала регистрации и файл, из которого предпринималась попытка загрузить данные.'");

		ВызватьИсключение СтрШаблон(ШаблонИсключения, КраткоеПредставлениеОшибки(ИнформацияОбОшибке));
		
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти