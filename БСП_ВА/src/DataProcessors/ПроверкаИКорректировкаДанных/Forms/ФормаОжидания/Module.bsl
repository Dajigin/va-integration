
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИдентификаторЗадания = Параметры.ИдентификаторЗадания;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжидания("ПроверитьЗадание", 2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы Или МожноЗакрывать Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Или МожноЗакрывать Тогда
		Возврат;
	КонецЕсли;
	
	ОтменитьЗадание(ИдентификаторЗадания);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПроверитьЗадание()
	
	Результат = ПроверитьЗаданиеНаСервере(ИдентификаторЗадания);
	
	Если Результат.Состояние = "Активно" Тогда
		Если Результат.Прогресс <> Неопределено Тогда
			Элементы.ДекорацияПрогресс.Заголовок = Результат.Прогресс;
		КонецЕсли;
		ПодключитьОбработчикОжидания("ПроверитьЗадание", 2, Истина);
	Иначе
		МожноЗакрывать = Истина;
		Закрыть(Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьЗаданиеНаСервере(ИдентификаторЗадания)
	
	Результат = Новый Структура("Состояние, КраткоеПредставлениеОшибки, ПодробноеПредставлениеОшибки, Прогресс");
	Задание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(ИдентификаторЗадания);
	
	Если Задание = Неопределено Тогда
		Результат.Состояние = "ЗавершеноАварийно";
		Результат.КраткоеПредставлениеОшибки = НСтр("ru = 'Задание не найдено.'");
		Результат.ПодробноеПредставлениеОшибки = НСтр("ru = 'Задание не найдено.'");
	ИначеЕсли Задание.Состояние = СостояниеФоновогоЗадания.Активно Тогда
		Результат.Состояние = "Активно";
		Сообщения = Задание.ПолучитьСообщенияПользователю(Истина);
		Для ОбратныйИндекс = 1 - Сообщения.Количество() По 0 Цикл
			ТекстСообщения = Сообщения[-ОбратныйИндекс].Текст;
			Если СтрНачинаетсяС(ТекстСообщения, ПроверкаИКорректировкаДанных.ИдентификаторПрогресса()) Тогда
				Результат.Прогресс = Сред(ТекстСообщения, СтрДлина(ПроверкаИКорректировкаДанных.ИдентификаторПрогресса()) + 1);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли Задание.Состояние = СостояниеФоновогоЗадания.Завершено Тогда
		Результат.Состояние = "Завершено";
	ИначеЕсли Задание.Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно Тогда
		Результат.Состояние = "ЗавершеноАварийно";
		Результат.КраткоеПредставлениеОшибки = КраткоеПредставлениеОшибки(Задание.ИнформацияОбОшибке);
		Результат.ПодробноеПредставлениеОшибки = ПодробноеПредставлениеОшибки(Задание.ИнформацияОбОшибке);
	ИначеЕсли Задание.Состояние = СостояниеФоновогоЗадания.Отменено Тогда
		Результат.Состояние = "Отменено";
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ОтменитьЗадание(ИдентификаторЗадания)
	
	Задание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(ИдентификаторЗадания);
	Если Задание <> Неопределено И Задание.Состояние = СостояниеФоновогоЗадания.Активно Тогда
		Попытка
			Задание.Отменить();
		Исключение
			Событие = НСтр("ru = 'Проверка и корректировка данных'", ОбщегоНазначения.КодОсновногоЯзыка());
			Комментарий = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ЗаписьЖурналаРегистрации(Событие, УровеньЖурналаРегистрации.Ошибка, , , Комментарий);
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти