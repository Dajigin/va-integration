
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

    ИдентификаторОбъекта = Параметры.ИдентификаторОбъекта;
    ИдентификаторПравила = Параметры.ИдентификаторПравила;
    Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаОжидание;
    
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    
    ПодключитьОбработчикОжидания("ПолучитьДанныеПоОбъекту", 1, Истина);
    
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СсылкиНаФайлыОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
    
    СтандартнаяОбработка = Ложь;
    Файл = Файлы.НайтиПоИдентификатору(Число(НавигационнаяСсылкаФорматированнойСтроки));
    ПолучитьФайл(Файл.Адрес, Файл.Имя, Истина);
    
КонецПроцедуры
    
#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПолучитьДанныеПоОбъекту()
	
    ПовторитьЗапрос = ПолучитьДанныеПоОбъектуНаСервере();
    Если ПовторитьЗапрос Тогда
        ПодключитьОбработчикОжидания("ПолучитьДанныеПоОбъекту", 1, Истина);
    Иначе
        СформироватьСсылки();    
    КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеПоОбъектуНаСервере()
    
    ПолученныеДанныеОбъекта = УниверсальнаяИнтеграция.ПрочитатьПолученныеДанныеОбъекта(ИдентификаторПравила, ИдентификаторОбъекта);
    Если ТипЗнч(ПолученныеДанныеОбъекта) = Тип("Структура") Тогда
        Если ПолученныеДанныеОбъекта.Свойство(ПолеОшибкаОбработки()) И ПолученныеДанныеОбъекта[ПолеОшибкаОбработки()] Тогда
            Предупреждение = ПолученныеДанныеОбъекта[ПолеСообщениеОбОшибке()];
            Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаОшибка;
        ИначеЕсли ПолученныеДанныеОбъекта.Свойство(ПолеФайлы()) И ПолученныеДанныеОбъекта[ПолеФайлы()].Количество() > 0 Тогда
            ЗаполнитьФайлыПоДаннымХранилища(ПолученныеДанныеОбъекта);
            Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаРезультат;
        Иначе
            Возврат Истина;
        КонецЕсли;
        УниверсальнаяИнтеграция.ОтписатьсяОтОповещенийНаИзменения(ИдентификаторПравила, Строка(ИдентификаторОбъекта));
        Возврат Ложь;
    Иначе
        Возврат Истина;
    КонецЕсли; 
	
КонецФункции

&НаСервере
Процедура СформироватьСсылки()
    
    СоставСтроки = Новый Массив;
    
    Для Каждого Файл Из Файлы Цикл
        СоставСтроки.Добавить(Новый ФорматированнаяСтрока(БиблиотекаКартинок.ДокументОбъект,,,, Строка(Файл.ПолучитьИдентификатор())));    	
        СоставСтроки.Добавить(Новый ФорматированнаяСтрока(" "));    	
        СоставСтроки.Добавить(Новый ФорматированнаяСтрока(Файл.Имя,,,, Строка(Файл.ПолучитьИдентификатор())));    	
        СоставСтроки.Добавить(Символы.ПС); 
        СоставСтроки.Добавить(Символы.ПС);
    КонецЦикла; 	
    
    СсылкиНаФайлы = Новый ФорматированнаяСтрока(СоставСтроки);
    
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФайлыПоДаннымХранилища(ДанныеХранилища)
    
    Словарь = УниверсальнаяИнтеграцияСловарь;	
    Файлы.Очистить();
    Для Каждого Файл Из ДанныеХранилища[ПолеФайлы()] Цикл
        УстановитьПривилегированныйРежим(Истина);
        ИмяФайла = РаботаВМоделиСервиса.ПолучитьФайлИзХранилищаМенеджераСервиса(Файл[ПолеИдентификаторФайла()]);
        УстановитьПривилегированныйРежим(Ложь);
        ДвоичныеДанныеФайла = Новый ДвоичныеДанные(ИмяФайла);
        АдресФайла = ПоместитьВоВременноеХранилище(ДвоичныеДанныеФайла, УникальныйИдентификатор);
        Попытка
            УдалитьФайлы(ИмяФайла);
		Исключение
			Комментарий = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ЗаписьЖурналаРегистрации(Словарь.КорневоеСобытие(), УровеньЖурналаРегистрации.Ошибка, , , Комментарий);
        КонецПопытки;
        СтрокаФайла = Файлы.Добавить();
        СтрокаФайла.Адрес = АдресФайла;
        СтрокаФайла.Имя = Файл[ПолеИмяФайла()];
    КонецЦикла;
	
КонецПроцедуры
 
&НаСервере
Функция ПолеИдентификаторФайла()
	
	Возврат "id";
	
КонецФункции
 
&НаСервере
Функция ПолеИмяФайла()
	
	Возврат "name";
	
КонецФункции

&НаСервере
Функция ПолеОшибкаОбработки()
	
	Возврат "error";
	
КонецФункции

&НаСервере
Функция ПолеСообщениеОбОшибке()
	
	Возврат "message";
	
КонецФункции

&НаСервере
Функция ПолеФайлы()
	
	Возврат "files";
	
КонецФункции

#КонецОбласти 
