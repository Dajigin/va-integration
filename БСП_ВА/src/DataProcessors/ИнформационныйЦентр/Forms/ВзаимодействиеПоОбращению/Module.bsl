
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИдентификаторВзаимодействия = Параметры.ИдентификаторВзаимодействия;
	ИдентификаторОбращения = Параметры.ИдентификаторОбращения;
	ТипВзаимодействия = Параметры.ТипВзаимодействия;
	Входящее = Параметры.Входящее;
	ИдентификаторПользователя = Пользователи.ТекущийПользователь().ИдентификаторПользователяСервиса;
	Просмотрено = Параметры.Просмотрено;
	
	ЗаполнитьВзаимодействие();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Просмотрено Тогда 
		Оповестить("ПросмотреноВзаимодействиеПоОбращению");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ФайлыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ФайлыПредставление" Или Поле.Имя = "ФайлыКартинка" Тогда 
		Результат = ПолучитьИмяФайлаИАдресХранилищаФайла(Элемент.ТекущиеДанные.Идентификатор);
		ПолучитьФайл(Результат.АдресХранилища, Результат.ИмяФайла);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Ответить(Команда)
	
	ИнформационныйЦентрКлиент.ОткрытьФормуОтправкиСообщенияВСлужбуПоддержки(Ложь, ИдентификаторОбращения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКОбращению(Команда)
	
	ИнформационныйЦентрКлиент.ОткрытьОбращениеВСлужбуПоддержки(ИдентификаторОбращения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьВзаимодействие()
	
	Попытка
		ДанныеПоВзаимодействию = ПолучитьДанныеПоВзаимодействию();
		ЗаполнитьЭлементыФормы(ДанныеПоВзаимодействию);
	Исключение
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрации(ИнформационныйЦентрСервер.ПолучитьИмяСобытияДляЖурналаРегистрации(), 
		                         УровеньЖурналаРегистрации.Ошибка,
		                         ,
		                         ,
		                         ТекстОшибки);
		ТекстВывода = ИнформационныйЦентрСервер.ТекстВыводаИнформацииОбОшибкеВСлужбеПоддержки();
		ВызватьИсключение ТекстВывода;
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеПоВзаимодействию()
	
	WSПрокси = ИнформационныйЦентрСервер.ПолучитьПроксиСлужбыПоддержки();
	
	Результат = WSПрокси.getInteraction(Строка(ИдентификаторПользователя), Строка(ИдентификаторВзаимодействия), ТипВзаимодействия, Входящее);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьЭлементыФормы(ДанныеПоВзаимодействию)
	
	ЭтотОбъект.Заголовок = ДанныеПоВзаимодействию.Name;
	
	Если ДанныеПоВзаимодействию.Type = "PhoneCall" Тогда
		
		Элементы.Содержание.Видимость = Ложь;
		Элементы.Файлы.Видимость = Ложь;
		
		Возврат;
		
	КонецЕсли;
	
	HTMLТекст = ДанныеПоВзаимодействию.HTMLText;
	
	// Поместить во временное хранилище картинки
	Для Каждого ДД Из ДанныеПоВзаимодействию.HTMLFiles Цикл 
		Картинка = Новый Картинка(ДД.Data);
		АдресХранилища = ПоместитьВоВременноеХранилище(Картинка);
		HTMLТекст = СтрЗаменить(HTMLТекст, ДД.Name, АдресХранилища);
	КонецЦикла;
	
	Содержание = HTMLТекст;
	
	// Отображение файлов
	
	Файлы.Очистить();
	Элементы.Файлы.Видимость = (ДанныеПоВзаимодействию.Files.Количество() <> 0);
	Для Каждого ТекущийФайл Из ДанныеПоВзаимодействию.Files Цикл 
		НовыйЭлемент = Файлы.Добавить();
		НовыйЭлемент.Представление = ТекущийФайл.Name + "." + ТекущийФайл.Extension + " (" + Окр(ТекущийФайл.Size / 1024, 2) + " " + НСтр("ru = 'Кб'") + ")";
		НовыйЭлемент.Картинка = ПолучитьИндексПиктограммыФайла(ТекущийФайл.Extension);
		НовыйЭлемент.Идентификатор = Новый УникальныйИдентификатор(ТекущийФайл.Id);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьИмяФайлаИАдресХранилищаФайла(ИдентификаторФайла)
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("АдресХранилища", "");
	ВозвращаемоеЗначение.Вставить("ИмяФайла", "");
	
	Попытка
		WSПрокси = ИнформационныйЦентрСервер.ПолучитьПроксиСлужбыПоддержки();
		Результат = WSПрокси.getInteractionFile(Строка(ИдентификаторПользователя), Строка(ИдентификаторВзаимодействия), Строка(ИдентификаторФайла), ТипВзаимодействия, Входящее);
		ВозвращаемоеЗначение.АдресХранилища = ПоместитьВоВременноеХранилище(Результат.Data, УникальныйИдентификатор);
		ВозвращаемоеЗначение.ИмяФайла = Результат.Name + "." + Результат.Extension;
	Исключение
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрации(ИнформационныйЦентрСервер.ПолучитьИмяСобытияДляЖурналаРегистрации(), 
		                         УровеньЖурналаРегистрации.Ошибка,
		                         ,
		                         ,
		                         ТекстОшибки);
		ТекстВывода = ИнформационныйЦентрСервер.ТекстВыводаИнформацииОбОшибкеВСлужбеПоддержки();
		ВызватьИсключение ТекстВывода;
	КонецПопытки;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

&НаСервере
Функция ПолучитьИндексПиктограммыФайла(Знач РасширениеФайла)
	
	Если ТипЗнч(РасширениеФайла) <> Тип("Строка")
		ИЛИ ПустаяСтрока(РасширениеФайла) Тогда
		Возврат 0;
	КонецЕсли;
	
	РасширениеФайла = ОбщегоНазначенияКлиентСервер.РасширениеБезТочки(РасширениеФайла);
	
	Расширение = "." + НРег(РасширениеФайла) + ";";
	
	Если СтрНайти(".dt;.1cd;.cf;.cfu;", Расширение) <> 0 Тогда
		Возврат 6; // Файлы 1С.
		
	ИначеЕсли Расширение = ".mxl;" Тогда
		Возврат 8; // Табличный Файл.
		
	ИначеЕсли СтрНайти(".txt;.log;.ini;", Расширение) <> 0 Тогда
		Возврат 10; // Текстовый Файл.
		
	ИначеЕсли Расширение = ".epf;" Тогда
		Возврат 12; // Внешние обработки.
		
	ИначеЕсли СтрНайти(".ico;.wmf;.emf;",Расширение) <> 0 Тогда
		Возврат 14; // Картинки.
		
	ИначеЕсли СтрНайти(".htm;.html;.url;.mht;.mhtml;",Расширение) <> 0 Тогда
		Возврат 16; // HTML.
		
	ИначеЕсли СтрНайти(".doc;.dot;.rtf;",Расширение) <> 0 Тогда
		Возврат 18; // Файл Microsoft Word.
		
	ИначеЕсли СтрНайти(".xls;.xlw;",Расширение) <> 0 Тогда
		Возврат 20; // Файл Microsoft Excel.
		
	ИначеЕсли СтрНайти(".ppt;.pps;",Расширение) <> 0 Тогда
		Возврат 22; // Файл Microsoft PowerPoint.
		
	ИначеЕсли СтрНайти(".vsd;",Расширение) <> 0 Тогда
		Возврат 24; // Файл Microsoft Visio.
		
	ИначеЕсли СтрНайти(".mpp;",Расширение) <> 0 Тогда
		Возврат 26; // Файл Microsoft Visio.
		
	ИначеЕсли СтрНайти(".mdb;.adp;.mda;.mde;.ade;",Расширение) <> 0 Тогда
		Возврат 28; // База данных Microsoft Access.
		
	ИначеЕсли СтрНайти(".xml;",Расширение) <> 0 Тогда
		Возврат 30; // xml.
		
	ИначеЕсли СтрНайти(".msg;.eml;",Расширение) <> 0 Тогда
		Возврат 32; // Письмо электронной почты.
		
	ИначеЕсли СтрНайти(".zip;.rar;.arj;.cab;.lzh;.ace;",Расширение) <> 0 Тогда
		Возврат 34; // Архивы.
		
	ИначеЕсли СтрНайти(".exe;.com;.bat;.cmd;",Расширение) <> 0 Тогда
		Возврат 36; // Исполняемые файлы.
		
	ИначеЕсли СтрНайти(".grs;",Расширение) <> 0 Тогда
		Возврат 38; // Графическая схема.
		
	ИначеЕсли СтрНайти(".geo;",Расширение) <> 0 Тогда
		Возврат 40; // Географическая схема.
		
	ИначеЕсли СтрНайти(".jpg;.jpeg;.jp2;.jpe;",Расширение) <> 0 Тогда
		Возврат 42; // jpg.
		
	ИначеЕсли СтрНайти(".bmp;.dib;",Расширение) <> 0 Тогда
		Возврат 44; // bmp.
		
	ИначеЕсли СтрНайти(".tif;.tiff;",Расширение) <> 0 Тогда
		Возврат 46; // tif.
		
	ИначеЕсли СтрНайти(".gif;",Расширение) <> 0 Тогда
		Возврат 48; // gif.
		
	ИначеЕсли СтрНайти(".png;",Расширение) <> 0 Тогда
		Возврат 50; // png.
		
	ИначеЕсли СтрНайти(".pdf;",Расширение) <> 0 Тогда
		Возврат 52; // pdf.
		
	ИначеЕсли СтрНайти(".odt;",Расширение) <> 0 Тогда
		Возврат 54; // Open Office writer.
		
	ИначеЕсли СтрНайти(".odf;",Расширение) <> 0 Тогда
		Возврат 56; // Open Office math.
		
	ИначеЕсли СтрНайти(".odp;",Расширение) <> 0 Тогда
		Возврат 58; // Open Office Impress.
		
	ИначеЕсли СтрНайти(".odg;",Расширение) <> 0 Тогда
		Возврат 60; // Open Office draw.
		
	ИначеЕсли СтрНайти(".ods;",Расширение) <> 0 Тогда
		Возврат 62; // Open Office calc.
		
	ИначеЕсли СтрНайти(".mp3;",Расширение) <> 0 Тогда
		Возврат 64;
		
	ИначеЕсли СтрНайти(".erf;",Расширение) <> 0 Тогда
		Возврат 66; // Внешние отчеты.
		
	ИначеЕсли СтрНайти(".docx;",Расширение) <> 0 Тогда
		Возврат 68; // Файл Microsoft Word docx.
		
	ИначеЕсли СтрНайти(".xlsx;",Расширение) <> 0 Тогда
		Возврат 70; // Файл Microsoft Excel xlsx.
		
	ИначеЕсли СтрНайти(".pptx;",Расширение) <> 0 Тогда
		Возврат 72; // Файл Microsoft PowerPoint pptx.
		
	ИначеЕсли СтрНайти(".p7s;",Расширение) <> 0 Тогда
		Возврат 74; // Файл подписи.
		
	ИначеЕсли СтрНайти(".p7m;",Расширение) <> 0 Тогда
		Возврат 76; // зашифрованное сообщение.
	Иначе
		Возврат 4;
	КонецЕсли;
	
КонецФункции


#КонецОбласти



