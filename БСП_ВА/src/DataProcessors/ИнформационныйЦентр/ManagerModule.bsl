#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Добавляет в текст сообщения от пользователя информацию о текущем приложении.
//
// Параметры:
//  ТекстHTML - Строка - текст сообщения пользователя.
//  ВложенияHTML - Структура - изображения, встроенные в сообщение пользователя
//
Процедура ДобавитьИнформациюОПриложении(ТекстHTML, ВложенияHTML) Экспорт
    
    СтруктураURL = ОбщегоНазначенияКлиентСервер.СтруктураURI(ПолучитьНавигационнуюСсылкуИнформационнойБазы());
    СистемнаяИнформация = Новый СистемнаяИнформация();
    
    ТекстHTML = ТекстHTML + Символы.ПС + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку( 
        "<!-- @AddInfo 
        |{
        |   ""host"": ""%1"",
        |   ""port"": ""%2"",
        |   ""zone"": ""%3"",
        |   ""platformVersion"": ""%4"",
        |   ""configVersion"": ""%5"",
        |   ""configName"": ""%6"",
		|	""descriptionImages"": %7
        |} 
        |-->", 
        СтруктураURL.Хост, 
        Формат(СтруктураURL.Порт,"ЧГ=0"),
        Формат(ИнтеграцияПодсистемБТС.ЗначениеРазделителяСеанса(),"ЧГ=0"),
        СистемнаяИнформация.ВерсияПриложения,
        Метаданные.Версия,
        Метаданные.Имя,
		РаботаВМоделиСервисаБТС.СтрокаИзСтруктурыJSON(ВложенияHTML));
	
КонецПроцедуры

Процедура ДобавитьЗначениеВСписокXDTO(Объект, ПолеСписка, Знач Значение) Экспорт

	Список = Объект[ПолеСписка]; // СписокXDTO
	Список.Добавить(Значение);
	
КонецПроцедуры

// Устанавливает признак Истина у свойства Гиперссылка декорации формы.
// 
// Параметры:
// 	Надпись - Надпись - декорация формы.
Процедура УстановитьПризнакГиперссылки(Надпись) Экспорт
	
	Надпись.Гиперссылка = Истина;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли 