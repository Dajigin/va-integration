#Если Не ВебКлиент Тогда
#Область ПрограммныйИнтерфейс

// Возвращает базовый каталог каталог тестов, заданный в настройках тестирования 
// 
// Возвращаемое значение:
// Строка, Неопределено - каталог тестов. Если не задан - возвращается Неопределено.
Функция БазовыйКаталогТестирования() Экспорт
	НастройкаПутьКТестам = ПредопределенноеЗначение("Перечисление.ВАИНТ_НастройкиТестирования.ПутьККаталогуТестов");
	БазовыйКаталогТестов = ВАИНТ_ТестированиеВызовСервера.ЗначениеНастройкиТестирования(НастройкаПутьКТестам); 
	Возврат БазовыйКаталогТестов;
КонецФункции

// Возвращает путь к каталогу, содержащему подготовленные для  выполнения тесты.
// 
// Параметры:
// 	БазовыйКаталогТестов - Строка - базовый каталог тестирования (см.БазовыйКаталогТестирования).
// Возвращаемое значение:
// 	Строка - путь к каталогу.
Функция ПутьККаталогуПодготовленныхТестов(БазовыйКаталогТестов) Экспорт
	Возврат БазовыйКаталогТестов + "\Temp\ТестыДляВыполнения";
КонецФункции

// Возвращает путь к корневому каталогу логов выполненеия тестов.
// 
// Параметры:
// 	БазовыйКаталогТестов - Строка - базовый каталог тестирования (см.БазовыйКаталогТестирования).
// Возвращаемое значение:
// 	Строка - путь к каталогу.
Функция ПутьККаталогуЛогов(БазовыйКаталогТестов) Экспорт
	Возврат ПутьККаталогуПодготовленныхТестов(БазовыйКаталогТестов) + "\Logs";
КонецФункции

// Возвращает путь к каталогу дистрибутива пакета Allure.
// 
// Параметры:
// 	БазовыйКаталогТестов - Строка - базовый каталог тестирования (см.БазовыйКаталогТестирования).
// Возвращаемое значение:
// 	Строка - путь к каталогу.
Функция ПутьККаталогуДистрибутиваAllure(БазовыйКаталогТестов) Экспорт
	Возврат ПутьККаталогуПодготовленныхТестов(БазовыйКаталогТестов) + "\Allure_Distrib";
КонецФункции

// Возвращает путь к каталогу логов выполнения тестов в формате Allure.
// 
// Параметры:
// 	БазовыйКаталогТестов - Строка - базовый каталог тестирования (см.БазовыйКаталогТестирования).
// Возвращаемое значение:
// 	Строка - путь к каталогу.
Функция ПутьККаталогуЛогов_Allure(БазовыйКаталогТестов)  Экспорт
	Возврат ПутьККаталогуЛогов(БазовыйКаталогТестов) + "\Allure";
КонецФункции

// Возвращает путь к каталогу логов выполнения тестов в формате Cucumber.
// 
// Параметры:
// 	БазовыйКаталогТестов - Строка - базовый каталог тестирования (см.БазовыйКаталогТестирования).
// Возвращаемое значение:
Функция ПутьККаталогуЛогов_Cucumber(БазовыйКаталогТестов) Экспорт
	Возврат ПутьККаталогуЛогов(БазовыйКаталогТестов) + "\Cucumber";
КонецФункции

// Возвращает путь к каталогу логов выполнения тестов в формате JUnit.
// 
// Параметры:
// 	БазовыйКаталогТестов - Строка - базовый каталог тестирования (см.БазовыйКаталогТестирования).
// Возвращаемое значение:
Функция ПутьККаталогуЛогов_JUnit(БазовыйКаталогТестов) Экспорт
	Возврат ПутьККаталогуЛогов(БазовыйКаталогТестов) + "\JUnit";
КонецФункции

// Возвращает путь к каталогу настроек наборов тестов.
// 
// Параметры:
// 	БазовыйКаталогТестов - Строка - базовый каталог тестирования (см.БазовыйКаталогТестирования).
// Возвращаемое значение:
Функция ПутьККаталогуНастроекНаборов(БазовыйКаталогТестов) Экспорт
	Возврат БазовыйКаталогТестов + "\НаборыТестов";
КонецФункции

// Заменяет строки в файле.
// 
// Параметры:
// 	ИмяФайла - Строка - полный путь к файлу, в котором производится замена.
// 	СтрокиЗамены - Массив - массив структур строк для замены. Структуры с параметрами:
// 	* ЧтоЗаменять - Строка - строка, которую требуется заменить.
// 	* НаЧтоЗаменять - Строка - Строка на которую требуется заменить.
Процедура ЗаменитьСтрокиВФайле(ИмяФайла, СтрокиЗамены) Экспорт
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ИмяФайла, "UTF-8");
	Стр = Текст.Прочитать();
	Текст.Закрыть();
	
	Для Каждого ОписаниеЗамены Из СтрокиЗамены Цикл
		Стр = СтрЗаменить(Стр, ОписаниеЗамены.ЧтоЗаменять, ОписаниеЗамены.НаЧтоЗаменять);
	КонецЦикла;	
	
	ЗТ = Новый ЗаписьТекста(ИмяФайла, , , Ложь); 
	ЗТ.Записать(Стр); 
	ЗТ.Закрыть();
КонецПроцедуры

// Заменяет одну строку в файле.
// 
// Параметры:
// 	ИмяФайла - Строка - полный путь к файлу, в котором производится замена.
// 	ЧтоЗаменять - Строка - Заменяемая строка.
// 	НаЧтоЗаменять - Строка - строка, на которую производится замена.
Процедура ЗаменитьСтрокуВФайле(ИмяФайла, ЧтоЗаменять, НаЧтоЗаменять) Экспорт
	СтруктураЗамены = Новый Структура("ЧтоЗаменять,НаЧтоЗаменять", ЧтоЗаменять, НаЧтоЗаменять);
	СтрокиЗамены = Новый Массив;
	СтрокиЗамены.Добавить(СтруктураЗамены);
	ЗаменитьСтрокиВФайле(ИмяФайла, СтрокиЗамены);
КонецПроцедуры

// Проверить наличие подсистемы авто тестирование. При отсутствии
Процедура ПроверитьНаличиеПодсистемыАвтоТестирование() Экспорт
	Если НЕ ВАИНТ_ТестированиеВызовСервераПовтИсп.ЕстьПодсистемаАвтоТестирование() Тогда
		ВызватьИсключение "Подсистема АвтоТестирование не интегрирована тестируемую конфигурацию. Операция прервана.";
	КонецЕсли;
КонецПроцедуры
#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
Функция ИмяФайлаСозданияТестовыхДанных(ИмяЭлемента) Экспорт
	Возврат ИмяЭлемента + "РегрессионноеТестирование.feature";
КонецФункции

Функция ПутьКФайлуШаблонаФичи() Экспорт
	Возврат БазовыйКаталогТестирования() + "\template.feature";
КонецФункции

Функция КаталогТестовПоТипуОбъекта(ТипОбъекта) Экспорт
	Если ТипОбъекта = "Справочник" Тогда
		Возврат БазовыйКаталогТестирования() + "\Объекты\Справочники\";
	ИначеЕсли ТипОбъекта = "Документ" Тогда
		Возврат БазовыйКаталогТестирования() + "\Объекты\Документы\";
	Иначе
		Возврат БазовыйКаталогТестирования() + "\" + ТипОбъекта + "\";
	КонецЕсли;
КонецФункции

Функция КаталогТестовОбъекта(ТипОбъекта, ИмяОбъекта) Экспорт
	КаталогТестовПоТипу = КаталогТестовПоТипуОбъекта(ТипОбъекта);
	Возврат КаталогТестовПоТипу + ИмяОбъекта;
КонецФункции

Функция ФайлРегрессионногоТеста(ТипОбъекта, ИмяОбъекта) Экспорт
	КаталогТестов = КаталогТестовОбъекта(ТипОбъекта, ИмяОбъекта);
	ИмяФайла = ИмяФайлаСозданияТестовыхДанных(ИмяОбъекта);
	Возврат КаталогТестов + "\" + ИмяФайла; 
КонецФункции

Функция ФайлТекущихПриемочныхТестов() Экспорт
	Возврат БазовыйКаталогТестирования() + "\ПриемочныеТекущие.feature"; 
КонецФункции
#КонецОбласти
#КонецЕсли